// SPDX-License-Identifier: LGPL-3.0-or-later
pragma solidity 0.8.19;

import "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol";

import "../interfaces/metadata/IDAOMetadata.sol";

/**
 * @title DAOMetadata
 * @notice A contract that allows changing and retrieving metadata about the DAO,
 * such as a URI that points to a JSON file with information about the DAO.
 */
abstract contract DAOMetadata is IDAOMetadata, Initializable {
    string private _uri;

    /**
     * @dev Initializes the DAO.
     * @param daoURI_ The DAO URI.
     */
    function __DAOMetadata_init(string memory daoURI_) internal onlyInitializing {
        _uri = daoURI_;
    }

    modifier onlyChangeDAOMetadataPermission() virtual {
        _;
    }

    /**
     * @dev Changes the DAO URI.
     * @param daoURI_ The new DAO URI.
     */
    function setDAOMetadata(
        string calldata daoURI_
    ) external override onlyChangeDAOMetadataPermission {
        _uri = daoURI_;

        emit DAOURIChanged(daoURI_);
    }

    /**
     * @dev Retrieves the dao URI.
     * @return _daoURI The dao URI.
     */
    function daoURI() external view override returns (string memory _daoURI) {
        return _uri;
    }
}
