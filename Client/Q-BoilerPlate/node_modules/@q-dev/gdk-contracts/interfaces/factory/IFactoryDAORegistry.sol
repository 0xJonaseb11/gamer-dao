// SPDX-License-Identifier: LGPL-3.0-or-later
pragma solidity 0.8.19;

/**
 * @title IFactoryDAORegistry
 * @dev Interface for a contract registry that allows for setting and updating the
 * implementations of contracts used by DAOs
 */
interface IFactoryDAORegistry {
    /**
     *  @notice The function that sets pools' implementations. Deploys ProxyBeacons on the first set.
     *  This function is also used to upgrade pools
     *  @param names_ the names that are associated with the pools implementations
     *  @param newImplementations_ the new implementations of the pools (ProxyBeacons will point to these)
     */
    function setNewImplementations(
        string[] calldata names_,
        address[] calldata newImplementations_
    ) external;

    /**
     *  @notice The paginated function that injects new dependencies to the pools
     *  @param name_ the pools name that will be injected
     *  @param offset_ the starting index in the pools array
     *  @param limit_ the number of pools
     */
    function injectDependenciesToExistingPools(
        string calldata name_,
        uint256 offset_,
        uint256 limit_
    ) external;

    /**
     *  @notice The paginated function that injects new dependencies to the pools with the data
     *  @param name_ the pools name that will be injected
     *  @param data_ the extra context data
     *  @param offset_ the starting index in the pools array
     *  @param limit_ the number of pools
     */
    function injectDependenciesToExistingPoolsWithData(
        string calldata name_,
        bytes calldata data_,
        uint256 offset_,
        uint256 limit_
    ) external;

    /**
     *  @notice The function to add new pools into the registry
     *  @param name_ the pool's associated name
     *  @param poolAddress_ the proxy address of the pool
     */
    function addProxyPool(string calldata name_, address poolAddress_) external;
}
