import { ContractReceipt, ContractTransaction, providers, Signer } from "ethers";
import { SystemContractInstance } from "../SystemContractInstance";
import { TxOptions } from "../../types";
import { IPermissionManager, MasterDAOFactory } from "../../ethers-contracts";
import { DAOConstructorParametersStruct, DAOPanelConstructorParametersStruct } from "../../ethers-contracts/MasterDAOFactory";
import { IDAOVoting } from "../../ethers-contracts/GeneralDAOVoting";
export declare class MasterDAOFactoryInstance extends SystemContractInstance<MasterDAOFactory> {
    constructor(signer: Signer | providers.Provider, address: string);
    deployDAO(params: DAOConstructorParametersStruct, txOptions?: TxOptions): Promise<ContractTransaction>;
    deployDAOPanel(dao: string, params: DAOPanelConstructorParametersStruct, txOptions?: TxOptions): Promise<ContractTransaction>;
    configureVotingSituations(dao: string, situations: IDAOVoting.InitialSituationStruct[], txOptions?: TxOptions): Promise<ContractTransaction>;
    configureVetoGroups(dao: string, params: IPermissionManager.VetoGroupStruct[], txOptions?: TxOptions): Promise<ContractTransaction>;
    revokeDAOCreatorRole(dao: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    getDAORegistryAddressFromTx(deployDAOReceipt: ContractReceipt): string;
}
