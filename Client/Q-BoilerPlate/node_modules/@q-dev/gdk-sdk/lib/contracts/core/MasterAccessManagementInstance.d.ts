import { ContractTransaction, providers, Signer } from "ethers";
import { SystemContractInstance } from "../SystemContractInstance";
import { TxOptions } from "../../types";
import { IRBAC, MasterAccessManagement } from "../../ethers-contracts";
export declare class MasterAccessManagementInstance extends SystemContractInstance<MasterAccessManagement> {
    constructor(signer: Signer | providers.Provider, address: string);
    grantRoles(to: string, rolesToGrant: string[], txOptions?: TxOptions): Promise<ContractTransaction>;
    revokeRoles(from: string, rolesToRevoke: string[], txOptions?: TxOptions): Promise<ContractTransaction>;
    addPermissionsToRole(role: string, permissionsToAdd: IRBAC.ResourceWithPermissionsStruct[], allowed: boolean, txOptions?: TxOptions): Promise<ContractTransaction>;
    removePermissionsFromRole(role: string, permissionsToRemove: IRBAC.ResourceWithPermissionsStruct[], allowed: boolean, txOptions?: TxOptions): Promise<ContractTransaction>;
    getUserRoles(who: string): Promise<string[]>;
    getRolePermissions(role: string): Promise<[IRBAC.ResourceWithPermissionsStruct[], IRBAC.ResourceWithPermissionsStruct[]]>;
}
