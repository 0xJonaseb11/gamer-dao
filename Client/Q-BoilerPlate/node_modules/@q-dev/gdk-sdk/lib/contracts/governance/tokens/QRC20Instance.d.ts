import { BigNumberish, ContractTransaction, providers, Signer } from "ethers";
import { SystemContractInstance } from "../../SystemContractInstance";
import { TxOptions } from "../../../types";
import { QRC20 } from "../../../ethers-contracts";
export declare class QRC20Instance extends SystemContractInstance<QRC20> {
    constructor(signer: Signer | providers.Provider, address: string);
    setContractMetadata(contractURI: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    approve(spender: string, amount: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    mintTo(receiver: string, amount: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    burnFrom(account: string, amount: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    transfer(to: string, amount: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    transferFrom(from: string, to: string, amount: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    increaseAllowance(spender: string, addedValue: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    decreaseAllowance(spender: string, subtractedValue: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
}
