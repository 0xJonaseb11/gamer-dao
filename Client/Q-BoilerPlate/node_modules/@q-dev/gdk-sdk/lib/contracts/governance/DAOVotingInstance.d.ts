import { BigNumberish, ContractTransaction, providers, Signer } from "ethers";
import { SystemContractInstance } from "../SystemContractInstance";
import { TxOptions } from "../../types";
import { ExpertsDAOVoting, IDAOVoting } from "../../ethers-contracts/ExpertsDAOVoting";
export declare class DAOVotingInstance extends SystemContractInstance<ExpertsDAOVoting> {
    constructor(signer: Signer | providers.Provider, address: string);
    createDAOVotingSituation(votingConfig: IDAOVoting.InitialSituationStruct, txOptions?: TxOptions): Promise<ContractTransaction>;
    removeVotingSituation(situation: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    createProposal(situation: string, remark: string, callData: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    voteFor(proposalId: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    voteAgainst(proposalId: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    veto(proposalId: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    executeProposal(proposalId: BigNumberish, txOptions?: TxOptions): Promise<ContractTransaction>;
    getProposalList(offset: BigNumberish, limit: BigNumberish): Promise<IDAOVoting.DAOProposalStructOutput[]>;
    getProposal(proposalId: BigNumberish): Promise<IDAOVoting.DAOProposalStructOutput>;
    getProposalVotingStats(proposalId: BigNumberish): Promise<IDAOVoting.VotingStatsStructOutput>;
}
