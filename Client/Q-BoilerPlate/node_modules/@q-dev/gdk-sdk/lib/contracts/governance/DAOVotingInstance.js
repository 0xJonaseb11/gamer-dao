"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DAOVotingInstance = void 0;
const SystemContractInstance_1 = require("../SystemContractInstance");
class DAOVotingInstance extends SystemContractInstance_1.SystemContractInstance {
    constructor(signer, address) {
        super(signer, "ExpertsDAOVoting.json", address);
    }
    async createDAOVotingSituation(votingConfig, txOptions) {
        return this.submitTransaction("createDAOVotingSituation", [votingConfig], txOptions);
    }
    async removeVotingSituation(situation, txOptions) {
        return this.submitTransaction("removeVotingSituation", [situation], txOptions);
    }
    async createProposal(situation, remark, callData, txOptions) {
        return this.submitTransaction("createProposal", [situation, remark, callData], txOptions);
    }
    async voteFor(proposalId, txOptions) {
        return this.submitTransaction("voteFor", [proposalId], txOptions);
    }
    async voteAgainst(proposalId, txOptions) {
        return this.submitTransaction("voteAgainst", [proposalId], txOptions);
    }
    async veto(proposalId, txOptions) {
        return this.submitTransaction("veto", [proposalId], txOptions);
    }
    async executeProposal(proposalId, txOptions) {
        return this.submitTransaction("executeProposal", [proposalId], txOptions);
    }
    async getProposalList(offset, limit) {
        return this.instance.getProposalList(offset, limit);
    }
    async getProposal(proposalId) {
        return this.instance.getProposal(proposalId);
    }
    async getProposalVotingStats(proposalId) {
        return this.instance.getProposalVotingStats(proposalId);
    }
}
exports.DAOVotingInstance = DAOVotingInstance;
//# sourceMappingURL=DAOVotingInstance.js.map