import { ContractTransaction, providers, Signer } from "ethers";
import { SystemContractInstance } from "./SystemContractInstance";
import { TxOptions } from "../types";
import { RoleManagedRegistry } from "../ethers-contracts";
export declare class RoleManagedRegistryInstance extends SystemContractInstance<RoleManagedRegistry> {
    readonly address: string;
    constructor(signer: Signer | providers.Provider, abiFile: string, address: string);
    upgradeContract(name: string, newImplementation: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    upgradeContractAndCall(name: string, newImplementation: string, data: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    addContract(name: string, contractAddress: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    addProxyContract(name: string, contractAddress: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    justAddProxyContract(name: string, contractAddress: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    removeContract(name: string, txOptions?: TxOptions): Promise<ContractTransaction>;
}
