import { ContractTransaction, providers, Signer } from "ethers";
import { SystemContractInstance } from "../../SystemContractInstance";
import { TxOptions } from "../../../types";
import { TokenFactory } from "../../../ethers-contracts";
import { IQSBT } from "../../../ethers-contracts/QSBT";
import { IQRC20 } from "../../../ethers-contracts/QRC20";
import { IQRC721 } from "../../../ethers-contracts/QRC721";
export declare class TokenFactoryInstance extends SystemContractInstance<TokenFactory> {
    constructor(signer: Signer | providers.Provider, address: string);
    deployQRC20(params: IQRC20.ConstructorParamsStruct, masterAddress: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    deployQRC721(params: IQRC721.ConstructorParamsStruct, masterAddress: string, txOptions?: TxOptions): Promise<ContractTransaction>;
    deployQSBT(params: IQSBT.ConstructorParamsStruct, masterAddress: string, txOptions?: TxOptions): Promise<ContractTransaction>;
}
