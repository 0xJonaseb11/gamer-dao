"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VotingFactory__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "votingAddress",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "string",
                        name: "panelName",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "votingToken",
                        type: "address",
                    },
                ],
                indexed: false,
                internalType: "struct IDAOVoting.ConstructorParams",
                name: "",
                type: "tuple",
            },
        ],
        name: "DeployedDAOVoting",
        type: "event",
    },
    {
        inputs: [],
        name: "VOTING_FACTORY_RESOURCE",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "daoRegistry",
        outputs: [
            {
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "panelName",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "votingToken",
                        type: "address",
                    },
                ],
                internalType: "struct IDAOVoting.ConstructorParams",
                name: "params_",
                type: "tuple",
            },
            {
                internalType: "string",
                name: "votingName_",
                type: "string",
            },
        ],
        name: "deployDAOVoting",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getInjector",
        outputs: [
            {
                internalType: "address",
                name: "injector_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "permissionManager",
        outputs: [
            {
                internalType: "contract PermissionManager",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "registryAddress_",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data_",
                type: "bytes",
            },
        ],
        name: "setDependencies",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "injector_",
                type: "address",
            },
        ],
        name: "setInjector",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "votingRegistry",
        outputs: [
            {
                internalType: "contract VotingRegistry",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class VotingFactory__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.VotingFactory__factory = VotingFactory__factory;
VotingFactory__factory.abi = _abi;
//# sourceMappingURL=VotingFactory__factory.js.map