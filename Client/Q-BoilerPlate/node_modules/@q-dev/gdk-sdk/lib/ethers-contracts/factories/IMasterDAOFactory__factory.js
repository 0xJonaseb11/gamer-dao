"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IMasterDAOFactory__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "daoMemberStorageProxy_",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        name: "DeployedDAOMemberStorage",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "daoPanelVotingProxy_",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        name: "DeployedDAOPanelVoting",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "daoParameterStorageProxy_",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        name: "DeployedDAOParameterStorage",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "daoRegistryProxy_",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "masterAccess",
                        type: "address",
                    },
                    {
                        internalType: "string[]",
                        name: "votingNames",
                        type: "string[]",
                    },
                    {
                        internalType: "address[]",
                        name: "votingAddresses",
                        type: "address[]",
                    },
                    {
                        internalType: "string",
                        name: "daoURI",
                        type: "string",
                    },
                    {
                        internalType: "bytes32",
                        name: "deploymentSalt",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "panelName",
                                        type: "string",
                                    },
                                    {
                                        internalType: "address",
                                        name: "votingToken",
                                        type: "address",
                                    },
                                ],
                                internalType: "struct IDAOVoting.ConstructorParams",
                                name: "votingParams",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "votingSituationName",
                                        type: "string",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "votingPeriod",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "vetoPeriod",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "proposalExecutionPeriod",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "requiredQuorum",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "requiredMajority",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "requiredVetoQuorum",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "votingType",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "string",
                                                name: "votingTarget",
                                                type: "string",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "votingMinAmount",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct IDAOVoting.DAOVotingValues",
                                        name: "votingValues",
                                        type: "tuple",
                                    },
                                ],
                                internalType: "struct IDAOVoting.InitialSituation[]",
                                name: "situations",
                                type: "tuple[]",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "name",
                                        type: "string",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "value",
                                        type: "bytes",
                                    },
                                    {
                                        internalType: "enum ParameterType",
                                        name: "solidityType",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct Parameter[]",
                                name: "initialParameters",
                                type: "tuple[]",
                            },
                            {
                                internalType: "address[]",
                                name: "initialMembers",
                                type: "address[]",
                            },
                        ],
                        internalType: "struct DAOPanelConstructorParameters",
                        name: "mainPanelParams",
                        type: "tuple",
                    },
                ],
                indexed: false,
                internalType: "struct DAOConstructorParameters",
                name: "params_",
                type: "tuple",
            },
        ],
        name: "DeployedDAORegistry",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "daoVaultProxy_",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        name: "DeployedDAOVault",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "permissionManagerProxy_",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        name: "DeployedPermissionManager",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "votingFactoryProxy_",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        name: "DeployedVotingFactory",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "votingRegistryProxy_",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract DAORegistry",
                name: "",
                type: "address",
            },
        ],
        name: "DeployedVotingRegistry",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "contract DAORegistry",
                name: "dao_",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "target",
                        type: "address",
                    },
                    {
                        internalType: "contract DAOMemberStorage",
                        name: "linkedMemberStorage",
                        type: "address",
                    },
                ],
                internalType: "struct IPermissionManager.VetoGroup[]",
                name: "vetoGroups_",
                type: "tuple[]",
            },
        ],
        name: "configureVetoGroups",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract DAORegistry",
                name: "dao_",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "string",
                        name: "votingSituationName",
                        type: "string",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "votingPeriod",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "vetoPeriod",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "proposalExecutionPeriod",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "requiredQuorum",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "requiredMajority",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "requiredVetoQuorum",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "votingType",
                                type: "uint256",
                            },
                            {
                                internalType: "string",
                                name: "votingTarget",
                                type: "string",
                            },
                            {
                                internalType: "uint256",
                                name: "votingMinAmount",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IDAOVoting.DAOVotingValues",
                        name: "votingValues",
                        type: "tuple",
                    },
                ],
                internalType: "struct IDAOVoting.InitialSituation[]",
                name: "situations_",
                type: "tuple[]",
            },
        ],
        name: "configureVotingSituations",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "masterAccess",
                        type: "address",
                    },
                    {
                        internalType: "string[]",
                        name: "votingNames",
                        type: "string[]",
                    },
                    {
                        internalType: "address[]",
                        name: "votingAddresses",
                        type: "address[]",
                    },
                    {
                        internalType: "string",
                        name: "daoURI",
                        type: "string",
                    },
                    {
                        internalType: "bytes32",
                        name: "deploymentSalt",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "panelName",
                                        type: "string",
                                    },
                                    {
                                        internalType: "address",
                                        name: "votingToken",
                                        type: "address",
                                    },
                                ],
                                internalType: "struct IDAOVoting.ConstructorParams",
                                name: "votingParams",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "votingSituationName",
                                        type: "string",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "votingPeriod",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "vetoPeriod",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "proposalExecutionPeriod",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "requiredQuorum",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "requiredMajority",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "requiredVetoQuorum",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "votingType",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "string",
                                                name: "votingTarget",
                                                type: "string",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "votingMinAmount",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct IDAOVoting.DAOVotingValues",
                                        name: "votingValues",
                                        type: "tuple",
                                    },
                                ],
                                internalType: "struct IDAOVoting.InitialSituation[]",
                                name: "situations",
                                type: "tuple[]",
                            },
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "name",
                                        type: "string",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "value",
                                        type: "bytes",
                                    },
                                    {
                                        internalType: "enum ParameterType",
                                        name: "solidityType",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct Parameter[]",
                                name: "initialParameters",
                                type: "tuple[]",
                            },
                            {
                                internalType: "address[]",
                                name: "initialMembers",
                                type: "address[]",
                            },
                        ],
                        internalType: "struct DAOPanelConstructorParameters",
                        name: "mainPanelParams",
                        type: "tuple",
                    },
                ],
                internalType: "struct DAOConstructorParameters",
                name: "params_",
                type: "tuple",
            },
        ],
        name: "deployDAO",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract DAORegistry",
                name: "dao_",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "panelName",
                                type: "string",
                            },
                            {
                                internalType: "address",
                                name: "votingToken",
                                type: "address",
                            },
                        ],
                        internalType: "struct IDAOVoting.ConstructorParams",
                        name: "votingParams",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "votingSituationName",
                                type: "string",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "votingPeriod",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "vetoPeriod",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "proposalExecutionPeriod",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "requiredQuorum",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "requiredMajority",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "requiredVetoQuorum",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "votingType",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "string",
                                        name: "votingTarget",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "votingMinAmount",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct IDAOVoting.DAOVotingValues",
                                name: "votingValues",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IDAOVoting.InitialSituation[]",
                        name: "situations",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "name",
                                type: "string",
                            },
                            {
                                internalType: "bytes",
                                name: "value",
                                type: "bytes",
                            },
                            {
                                internalType: "enum ParameterType",
                                name: "solidityType",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct Parameter[]",
                        name: "initialParameters",
                        type: "tuple[]",
                    },
                    {
                        internalType: "address[]",
                        name: "initialMembers",
                        type: "address[]",
                    },
                ],
                internalType: "struct DAOPanelConstructorParameters",
                name: "daoPanelParams_",
                type: "tuple",
            },
        ],
        name: "deployDAOPanel",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "salt_",
                type: "bytes32",
            },
        ],
        name: "predictDAOAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name_",
                type: "string",
            },
            {
                internalType: "address[]",
                name: "pools_",
                type: "address[]",
            },
        ],
        name: "restoreRegistryPools",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract DAORegistry",
                name: "dao_",
                type: "address",
            },
        ],
        name: "revokeDAOCreatorRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IMasterDAOFactory__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IMasterDAOFactory__factory = IMasterDAOFactory__factory;
IMasterDAOFactory__factory.abi = _abi;
//# sourceMappingURL=IMasterDAOFactory__factory.js.map