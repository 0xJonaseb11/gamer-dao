"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DAOParameterStorage__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "parameterName",
                type: "string",
            },
        ],
        name: "DAOParameterStorage__ParameterNotFound",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        inputs: [],
        name: "DAO_PARAMETER_STORAGE_RESOURCE",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "resource_",
                type: "string",
            },
        ],
        name: "__DAOParameterStorage_init",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "member_",
                type: "address",
            },
            {
                internalType: "string",
                name: "permission_",
                type: "string",
            },
        ],
        name: "checkPermission",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "parameterName_",
                type: "string",
            },
        ],
        name: "getDAOParameter",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        internalType: "enum ParameterType",
                        name: "solidityType",
                        type: "uint8",
                    },
                ],
                internalType: "struct Parameter",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDAOParameters",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        internalType: "enum ParameterType",
                        name: "solidityType",
                        type: "uint8",
                    },
                ],
                internalType: "struct Parameter[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getInjector",
        outputs: [
            {
                internalType: "address",
                name: "injector_",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getResource",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "permissionManager",
        outputs: [
            {
                internalType: "contract PermissionManager",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "parameterName_",
                type: "string",
            },
        ],
        name: "removeDAOParameter",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string[]",
                name: "parameterNames_",
                type: "string[]",
            },
        ],
        name: "removeDAOParameters",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        internalType: "enum ParameterType",
                        name: "solidityType",
                        type: "uint8",
                    },
                ],
                internalType: "struct Parameter",
                name: "parameter_",
                type: "tuple",
            },
        ],
        name: "setDAOParameter",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        internalType: "enum ParameterType",
                        name: "solidityType",
                        type: "uint8",
                    },
                ],
                internalType: "struct Parameter[]",
                name: "parameters_",
                type: "tuple[]",
            },
        ],
        name: "setDAOParameters",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "registryAddress_",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "setDependencies",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "injector_",
                type: "address",
            },
        ],
        name: "setInjector",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "votingType",
        outputs: [
            {
                internalType: "enum VotingType",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class DAOParameterStorage__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DAOParameterStorage__factory = DAOParameterStorage__factory;
DAOParameterStorage__factory.abi = _abi;
//# sourceMappingURL=DAOParameterStorage__factory.js.map