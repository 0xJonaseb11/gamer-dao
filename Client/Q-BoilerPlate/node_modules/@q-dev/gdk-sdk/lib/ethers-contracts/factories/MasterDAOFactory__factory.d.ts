import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { MasterDAOFactory, MasterDAOFactoryInterface } from "../MasterDAOFactory";
export declare class MasterDAOFactory__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "daoMemberStorageProxy_";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract DAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "DeployedDAOMemberStorage";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "daoPanelVotingProxy_";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract DAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "DeployedDAOPanelVoting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "daoParameterStorageProxy_";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract DAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "DeployedDAOParameterStorage";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "daoRegistryProxy_";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "masterAccess";
                readonly type: "address";
            }, {
                readonly internalType: "string[]";
                readonly name: "votingNames";
                readonly type: "string[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "votingAddresses";
                readonly type: "address[]";
            }, {
                readonly internalType: "string";
                readonly name: "daoURI";
                readonly type: "string";
            }, {
                readonly internalType: "bytes32";
                readonly name: "deploymentSalt";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "panelName";
                        readonly type: "string";
                    }, {
                        readonly internalType: "address";
                        readonly name: "votingToken";
                        readonly type: "address";
                    }];
                    readonly internalType: "struct IDAOVoting.ConstructorParams";
                    readonly name: "votingParams";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "votingSituationName";
                        readonly type: "string";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "votingPeriod";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "vetoPeriod";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "proposalExecutionPeriod";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "requiredQuorum";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "requiredMajority";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "requiredVetoQuorum";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "votingType";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "string";
                            readonly name: "votingTarget";
                            readonly type: "string";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "votingMinAmount";
                            readonly type: "uint256";
                        }];
                        readonly internalType: "struct IDAOVoting.DAOVotingValues";
                        readonly name: "votingValues";
                        readonly type: "tuple";
                    }];
                    readonly internalType: "struct IDAOVoting.InitialSituation[]";
                    readonly name: "situations";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "value";
                        readonly type: "bytes";
                    }, {
                        readonly internalType: "enum ParameterType";
                        readonly name: "solidityType";
                        readonly type: "uint8";
                    }];
                    readonly internalType: "struct Parameter[]";
                    readonly name: "initialParameters";
                    readonly type: "tuple[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "initialMembers";
                    readonly type: "address[]";
                }];
                readonly internalType: "struct DAOPanelConstructorParameters";
                readonly name: "mainPanelParams";
                readonly type: "tuple";
            }];
            readonly indexed: false;
            readonly internalType: "struct DAOConstructorParameters";
            readonly name: "params_";
            readonly type: "tuple";
        }];
        readonly name: "DeployedDAORegistry";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "daoVaultProxy_";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract DAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "DeployedDAOVault";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "permissionManagerProxy_";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract DAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "DeployedPermissionManager";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "votingFactoryProxy_";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract DAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "DeployedVotingFactory";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "votingRegistryProxy_";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract DAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "DeployedVotingRegistry";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "MASTER_DAO_FACTORY_RESOURCE";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract DAORegistry";
            readonly name: "dao_";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "target";
                readonly type: "address";
            }, {
                readonly internalType: "contract DAOMemberStorage";
                readonly name: "linkedMemberStorage";
                readonly type: "address";
            }];
            readonly internalType: "struct IPermissionManager.VetoGroup[]";
            readonly name: "vetoGroups_";
            readonly type: "tuple[]";
        }];
        readonly name: "configureVetoGroups";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract DAORegistry";
            readonly name: "dao_";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "votingSituationName";
                readonly type: "string";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "votingPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "proposalExecutionPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredQuorum";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredMajority";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredVetoQuorum";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingType";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "string";
                    readonly name: "votingTarget";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingMinAmount";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.DAOVotingValues";
                readonly name: "votingValues";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IDAOVoting.InitialSituation[]";
            readonly name: "situations_";
            readonly type: "tuple[]";
        }];
        readonly name: "configureVotingSituations";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "masterAccess";
                readonly type: "address";
            }, {
                readonly internalType: "string[]";
                readonly name: "votingNames";
                readonly type: "string[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "votingAddresses";
                readonly type: "address[]";
            }, {
                readonly internalType: "string";
                readonly name: "daoURI";
                readonly type: "string";
            }, {
                readonly internalType: "bytes32";
                readonly name: "deploymentSalt";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "panelName";
                        readonly type: "string";
                    }, {
                        readonly internalType: "address";
                        readonly name: "votingToken";
                        readonly type: "address";
                    }];
                    readonly internalType: "struct IDAOVoting.ConstructorParams";
                    readonly name: "votingParams";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "votingSituationName";
                        readonly type: "string";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "votingPeriod";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "vetoPeriod";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "proposalExecutionPeriod";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "requiredQuorum";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "requiredMajority";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "requiredVetoQuorum";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "votingType";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "string";
                            readonly name: "votingTarget";
                            readonly type: "string";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "votingMinAmount";
                            readonly type: "uint256";
                        }];
                        readonly internalType: "struct IDAOVoting.DAOVotingValues";
                        readonly name: "votingValues";
                        readonly type: "tuple";
                    }];
                    readonly internalType: "struct IDAOVoting.InitialSituation[]";
                    readonly name: "situations";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "value";
                        readonly type: "bytes";
                    }, {
                        readonly internalType: "enum ParameterType";
                        readonly name: "solidityType";
                        readonly type: "uint8";
                    }];
                    readonly internalType: "struct Parameter[]";
                    readonly name: "initialParameters";
                    readonly type: "tuple[]";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "initialMembers";
                    readonly type: "address[]";
                }];
                readonly internalType: "struct DAOPanelConstructorParameters";
                readonly name: "mainPanelParams";
                readonly type: "tuple";
            }];
            readonly internalType: "struct DAOConstructorParameters";
            readonly name: "params_";
            readonly type: "tuple";
        }];
        readonly name: "deployDAO";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract DAORegistry";
            readonly name: "dao_";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "string";
                    readonly name: "panelName";
                    readonly type: "string";
                }, {
                    readonly internalType: "address";
                    readonly name: "votingToken";
                    readonly type: "address";
                }];
                readonly internalType: "struct IDAOVoting.ConstructorParams";
                readonly name: "votingParams";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "string";
                    readonly name: "votingSituationName";
                    readonly type: "string";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "votingPeriod";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "vetoPeriod";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "proposalExecutionPeriod";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "requiredQuorum";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "requiredMajority";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "requiredVetoQuorum";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "votingType";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "string";
                        readonly name: "votingTarget";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "votingMinAmount";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IDAOVoting.DAOVotingValues";
                    readonly name: "votingValues";
                    readonly type: "tuple";
                }];
                readonly internalType: "struct IDAOVoting.InitialSituation[]";
                readonly name: "situations";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "value";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "enum ParameterType";
                    readonly name: "solidityType";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct Parameter[]";
                readonly name: "initialParameters";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "initialMembers";
                readonly type: "address[]";
            }];
            readonly internalType: "struct DAOPanelConstructorParameters";
            readonly name: "daoPanelParams_";
            readonly type: "tuple";
        }];
        readonly name: "deployDAOPanel";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getInjector";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "injector_";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isDAOVetoConfigured";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isDAOVotingConfigured";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "masterAccess";
        readonly outputs: readonly [{
            readonly internalType: "contract MasterAccessManagement";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "masterDAORegistry";
        readonly outputs: readonly [{
            readonly internalType: "contract MasterDAORegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "salt_";
            readonly type: "bytes32";
        }];
        readonly name: "predictDAOAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name_";
            readonly type: "string";
        }, {
            readonly internalType: "address[]";
            readonly name: "pools_";
            readonly type: "address[]";
        }];
        readonly name: "restoreRegistryPools";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract DAORegistry";
            readonly name: "dao_";
            readonly type: "address";
        }];
        readonly name: "revokeDAOCreatorRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "registryAddress_";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "data_";
            readonly type: "bytes";
        }];
        readonly name: "setDependencies";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "injector_";
            readonly type: "address";
        }];
        readonly name: "setInjector";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MasterDAOFactoryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MasterDAOFactory;
}
