import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ParameterSetMock, ParameterSetMockInterface } from "../ParameterSetMock";
export declare class ParameterSetMock__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "value";
                readonly type: "bytes";
            }, {
                readonly internalType: "enum ParameterType";
                readonly name: "solidityType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Parameter";
            readonly name: "value_";
            readonly type: "tuple";
        }];
        readonly name: "add";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index_";
            readonly type: "uint256";
        }];
        readonly name: "at";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "value";
                readonly type: "bytes";
            }, {
                readonly internalType: "enum ParameterType";
                readonly name: "solidityType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Parameter";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "value";
                readonly type: "bytes";
            }, {
                readonly internalType: "enum ParameterType";
                readonly name: "solidityType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Parameter";
            readonly name: "value_";
            readonly type: "tuple";
        }];
        readonly name: "change";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name_";
            readonly type: "string";
        }];
        readonly name: "contains";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name_";
            readonly type: "string";
        }];
        readonly name: "get";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "value";
                readonly type: "bytes";
            }, {
                readonly internalType: "enum ParameterType";
                readonly name: "solidityType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Parameter";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getSet";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "value";
                readonly type: "bytes";
            }, {
                readonly internalType: "enum ParameterType";
                readonly name: "solidityType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Parameter[]";
            readonly name: "set_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "length";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name_";
            readonly type: "string";
        }];
        readonly name: "remove";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "values";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "value";
                readonly type: "bytes";
            }, {
                readonly internalType: "enum ParameterType";
                readonly name: "solidityType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Parameter[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ParameterSetMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ParameterSetMock;
}
