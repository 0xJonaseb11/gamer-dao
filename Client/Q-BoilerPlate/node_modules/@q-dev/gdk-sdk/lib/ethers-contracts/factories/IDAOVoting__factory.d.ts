import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IDAOVoting, IDAOVotingInterface } from "../IDAOVoting";
export declare class IDAOVoting__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "remark";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "relatedExpertPanel";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "relatedVotingSituation";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "target";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "enum VotingType";
                    readonly name: "votingType";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingStartTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingEndTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoEndTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "proposalExecutionPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredQuorum";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredMajority";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredVetoQuorum";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.VotingParams";
                readonly name: "params";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "votedFor";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votedAgainst";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoesCount";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.VotingCounters";
                readonly name: "counters";
                readonly type: "tuple";
            }, {
                readonly internalType: "bool";
                readonly name: "executed";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct IDAOVoting.DAOProposal";
            readonly name: "proposal";
            readonly type: "tuple";
        }];
        readonly name: "ProposalCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "ProposalExecuted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "voter";
            readonly type: "address";
        }];
        readonly name: "UserVetoed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "voter";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "votingPower";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "enum IDAOVoting.VotingOption";
            readonly name: "option";
            readonly type: "uint8";
        }];
        readonly name: "UserVoted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "votingPeriod";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vetoPeriod";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "proposalExecutionPeriod";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "requiredQuorum";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "requiredMajority";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "requiredVetoQuorum";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "votingType";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "votingTarget";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "votingMinAmount";
                readonly type: "uint256";
            }];
            readonly indexed: false;
            readonly internalType: "struct IDAOVoting.DAOVotingValues";
            readonly name: "values";
            readonly type: "tuple";
        }];
        readonly name: "VotingSituationCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }];
        readonly name: "VotingSituationRemoved";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "member_";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "permission_";
            readonly type: "string";
        }];
        readonly name: "checkPermission";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "votingSituationName";
                readonly type: "string";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "votingPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "proposalExecutionPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredQuorum";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredMajority";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredVetoQuorum";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingType";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "string";
                    readonly name: "votingTarget";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingMinAmount";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.DAOVotingValues";
                readonly name: "votingValues";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IDAOVoting.InitialSituation";
            readonly name: "conf_";
            readonly type: "tuple";
        }];
        readonly name: "createDAOVotingSituation";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "situation_";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "remark_";
            readonly type: "string";
        }, {
            readonly internalType: "bytes";
            readonly name: "callData_";
            readonly type: "bytes";
        }];
        readonly name: "createProposal";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "proposalId_";
            readonly type: "uint256";
        }];
        readonly name: "executeProposal";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "proposalId_";
            readonly type: "uint256";
        }];
        readonly name: "getProposal";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "remark";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "relatedExpertPanel";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "relatedVotingSituation";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "target";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "enum VotingType";
                    readonly name: "votingType";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingStartTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingEndTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoEndTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "proposalExecutionPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredQuorum";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredMajority";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredVetoQuorum";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.VotingParams";
                readonly name: "params";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "votedFor";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votedAgainst";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoesCount";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.VotingCounters";
                readonly name: "counters";
                readonly type: "tuple";
            }, {
                readonly internalType: "bool";
                readonly name: "executed";
                readonly type: "bool";
            }];
            readonly internalType: "struct IDAOVoting.DAOProposal";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "offset_";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "limit_";
            readonly type: "uint256";
        }];
        readonly name: "getProposalList";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "remark";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "relatedExpertPanel";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "relatedVotingSituation";
                readonly type: "string";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "target";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "enum VotingType";
                    readonly name: "votingType";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingStartTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votingEndTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoEndTime";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "proposalExecutionPeriod";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredQuorum";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredMajority";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "requiredVetoQuorum";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.VotingParams";
                readonly name: "params";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "votedFor";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "votedAgainst";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "vetoesCount";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IDAOVoting.VotingCounters";
                readonly name: "counters";
                readonly type: "tuple";
            }, {
                readonly internalType: "bool";
                readonly name: "executed";
                readonly type: "bool";
            }];
            readonly internalType: "struct IDAOVoting.DAOProposal[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "proposalId_";
            readonly type: "uint256";
        }];
        readonly name: "getProposalStatus";
        readonly outputs: readonly [{
            readonly internalType: "enum IDAOVoting.ProposalStatus";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getResource";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getVotingSituations";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "situation_";
            readonly type: "string";
        }];
        readonly name: "removeVotingSituation";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "proposalId_";
            readonly type: "uint256";
        }];
        readonly name: "veto";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "proposalId_";
            readonly type: "uint256";
        }];
        readonly name: "voteAgainst";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "proposalId_";
            readonly type: "uint256";
        }];
        readonly name: "voteFor";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IDAOVotingInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IDAOVoting;
}
