"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IDAORegistry__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "panelName",
                type: "string",
            },
        ],
        name: "PanelAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "panelName",
                type: "string",
            },
        ],
        name: "PanelRemoved",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "panelName_",
                type: "string",
            },
        ],
        name: "addPanel",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "member_",
                type: "address",
            },
            {
                internalType: "string",
                name: "permission_",
                type: "string",
            },
        ],
        name: "checkPermission",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account_",
                type: "address",
            },
        ],
        name: "getAccountStatuses",
        outputs: [
            {
                components: [
                    {
                        internalType: "string[]",
                        name: "groups",
                        type: "string[]",
                    },
                    {
                        internalType: "bool[]",
                        name: "isMember",
                        type: "bool[]",
                    },
                ],
                internalType: "struct IDAORegistry.AccountStatus",
                name: "status",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "panelName_",
                type: "string",
            },
        ],
        name: "getConfDAOParameterStorage",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "panelName_",
                type: "string",
            },
        ],
        name: "getDAOMemberStorage",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDAOVault",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "panelName_",
                type: "string",
            },
        ],
        name: "getExpertsDAOVoting",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "panelName_",
                type: "string",
            },
        ],
        name: "getGeneralDAOVoting",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getPanels",
        outputs: [
            {
                internalType: "string[]",
                name: "",
                type: "string[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "panelName_",
                type: "string",
            },
        ],
        name: "getRegDAOParameterStorage",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getRegistryContractAddresses",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "address_",
                        type: "address",
                    },
                ],
                internalType: "struct IDAORegistry.RegistryEntry[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getResource",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getVotingFactory",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getVotingRegistry",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isAbleToAddPanel",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "panelName_",
                type: "string",
            },
        ],
        name: "removePanel",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IDAORegistry__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IDAORegistry__factory = IDAORegistry__factory;
IDAORegistry__factory.abi = _abi;
//# sourceMappingURL=IDAORegistry__factory.js.map