import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, Overrides, PopulatedTransaction, Signer, utils } from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from "./common";
export type ParameterStruct = {
    name: PromiseOrValue<string>;
    value: PromiseOrValue<BytesLike>;
    solidityType: PromiseOrValue<BigNumberish>;
};
export type ParameterStructOutput = [string, string, number] & {
    name: string;
    value: string;
    solidityType: number;
};
export interface IDAOParameterStorageInterface extends utils.Interface {
    functions: {
        "checkPermission(address,string)": FunctionFragment;
        "getDAOParameter(string)": FunctionFragment;
        "getDAOParameters()": FunctionFragment;
        "getResource()": FunctionFragment;
        "removeDAOParameter(string)": FunctionFragment;
        "removeDAOParameters(string[])": FunctionFragment;
        "setDAOParameter((string,bytes,uint8))": FunctionFragment;
        "setDAOParameters((string,bytes,uint8)[])": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "checkPermission" | "getDAOParameter" | "getDAOParameters" | "getResource" | "removeDAOParameter" | "removeDAOParameters" | "setDAOParameter" | "setDAOParameters"): FunctionFragment;
    encodeFunctionData(functionFragment: "checkPermission", values: [PromiseOrValue<string>, PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "getDAOParameter", values: [PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "getDAOParameters", values?: undefined): string;
    encodeFunctionData(functionFragment: "getResource", values?: undefined): string;
    encodeFunctionData(functionFragment: "removeDAOParameter", values: [PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "removeDAOParameters", values: [PromiseOrValue<string>[]]): string;
    encodeFunctionData(functionFragment: "setDAOParameter", values: [ParameterStruct]): string;
    encodeFunctionData(functionFragment: "setDAOParameters", values: [ParameterStruct[]]): string;
    decodeFunctionResult(functionFragment: "checkPermission", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getDAOParameter", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getDAOParameters", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getResource", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "removeDAOParameter", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "removeDAOParameters", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "setDAOParameter", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "setDAOParameters", data: BytesLike): Result;
    events: {};
}
export interface IDAOParameterStorage extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: IDAOParameterStorageInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        checkPermission(member_: PromiseOrValue<string>, permission_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[boolean]>;
        getDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[ParameterStructOutput]>;
        getDAOParameters(overrides?: CallOverrides): Promise<[ParameterStructOutput[]]>;
        getResource(overrides?: CallOverrides): Promise<[string]>;
        removeDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        removeDAOParameters(parameterNames_: PromiseOrValue<string>[], overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        setDAOParameter(parameter_: ParameterStruct, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        setDAOParameters(parameters_: ParameterStruct[], overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
    };
    checkPermission(member_: PromiseOrValue<string>, permission_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>;
    getDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
    getDAOParameters(overrides?: CallOverrides): Promise<ParameterStructOutput[]>;
    getResource(overrides?: CallOverrides): Promise<string>;
    removeDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    removeDAOParameters(parameterNames_: PromiseOrValue<string>[], overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    setDAOParameter(parameter_: ParameterStruct, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    setDAOParameters(parameters_: ParameterStruct[], overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    callStatic: {
        checkPermission(member_: PromiseOrValue<string>, permission_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>;
        getDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
        getDAOParameters(overrides?: CallOverrides): Promise<ParameterStructOutput[]>;
        getResource(overrides?: CallOverrides): Promise<string>;
        removeDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;
        removeDAOParameters(parameterNames_: PromiseOrValue<string>[], overrides?: CallOverrides): Promise<void>;
        setDAOParameter(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<void>;
        setDAOParameters(parameters_: ParameterStruct[], overrides?: CallOverrides): Promise<void>;
    };
    filters: {};
    estimateGas: {
        checkPermission(member_: PromiseOrValue<string>, permission_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;
        getDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;
        getDAOParameters(overrides?: CallOverrides): Promise<BigNumber>;
        getResource(overrides?: CallOverrides): Promise<BigNumber>;
        removeDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        removeDAOParameters(parameterNames_: PromiseOrValue<string>[], overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        setDAOParameter(parameter_: ParameterStruct, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        setDAOParameters(parameters_: ParameterStruct[], overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
    };
    populateTransaction: {
        checkPermission(member_: PromiseOrValue<string>, permission_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        getDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        getDAOParameters(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        getResource(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        removeDAOParameter(parameterName_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        removeDAOParameters(parameterNames_: PromiseOrValue<string>[], overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        setDAOParameter(parameter_: ParameterStruct, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        setDAOParameters(parameters_: ParameterStruct[], overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
    };
}
