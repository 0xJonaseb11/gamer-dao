import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, Overrides, PopulatedTransaction, Signer, utils } from "ethers";
import type { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from "./common";
export declare namespace IQRC20 {
    type ConstructorParamsStruct = {
        name: PromiseOrValue<string>;
        symbol: PromiseOrValue<string>;
        contractURI: PromiseOrValue<string>;
        decimals: PromiseOrValue<BigNumberish>;
        totalSupplyCap: PromiseOrValue<BigNumberish>;
    };
    type ConstructorParamsStructOutput = [
        string,
        string,
        string,
        number,
        BigNumber
    ] & {
        name: string;
        symbol: string;
        contractURI: string;
        decimals: number;
        totalSupplyCap: BigNumber;
    };
}
export declare namespace IQRC721 {
    type ConstructorParamsStruct = {
        name: PromiseOrValue<string>;
        symbol: PromiseOrValue<string>;
        contractURI: PromiseOrValue<string>;
        baseURI: PromiseOrValue<string>;
        totalSupplyCap: PromiseOrValue<BigNumberish>;
    };
    type ConstructorParamsStructOutput = [
        string,
        string,
        string,
        string,
        BigNumber
    ] & {
        name: string;
        symbol: string;
        contractURI: string;
        baseURI: string;
        totalSupplyCap: BigNumber;
    };
}
export declare namespace IQSBT {
    type ConstructorParamsStruct = {
        name: PromiseOrValue<string>;
        symbol: PromiseOrValue<string>;
        contractURI: PromiseOrValue<string>;
        baseURI: PromiseOrValue<string>;
        totalSupplyCap: PromiseOrValue<BigNumberish>;
    };
    type ConstructorParamsStructOutput = [
        string,
        string,
        string,
        string,
        BigNumber
    ] & {
        name: string;
        symbol: string;
        contractURI: string;
        baseURI: string;
        totalSupplyCap: BigNumber;
    };
}
export interface ITokenFactoryInterface extends utils.Interface {
    functions: {
        "deployQRC20((string,string,string,uint8,uint256),address)": FunctionFragment;
        "deployQRC721((string,string,string,string,uint256),address)": FunctionFragment;
        "deployQSBT((string,string,string,string,uint256),address)": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "deployQRC20" | "deployQRC721" | "deployQSBT"): FunctionFragment;
    encodeFunctionData(functionFragment: "deployQRC20", values: [IQRC20.ConstructorParamsStruct, PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "deployQRC721", values: [IQRC721.ConstructorParamsStruct, PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "deployQSBT", values: [IQSBT.ConstructorParamsStruct, PromiseOrValue<string>]): string;
    decodeFunctionResult(functionFragment: "deployQRC20", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "deployQRC721", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "deployQSBT", data: BytesLike): Result;
    events: {
        "DeployedQRC20(address,tuple)": EventFragment;
        "DeployedQRC721(address,tuple)": EventFragment;
        "DeployedQSBT(address,tuple)": EventFragment;
    };
    getEvent(nameOrSignatureOrTopic: "DeployedQRC20"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "DeployedQRC721"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "DeployedQSBT"): EventFragment;
}
export interface DeployedQRC20EventObject {
    token: string;
    arg1: IQRC20.ConstructorParamsStructOutput;
}
export type DeployedQRC20Event = TypedEvent<[
    string,
    IQRC20.ConstructorParamsStructOutput
], DeployedQRC20EventObject>;
export type DeployedQRC20EventFilter = TypedEventFilter<DeployedQRC20Event>;
export interface DeployedQRC721EventObject {
    token: string;
    arg1: IQRC721.ConstructorParamsStructOutput;
}
export type DeployedQRC721Event = TypedEvent<[
    string,
    IQRC721.ConstructorParamsStructOutput
], DeployedQRC721EventObject>;
export type DeployedQRC721EventFilter = TypedEventFilter<DeployedQRC721Event>;
export interface DeployedQSBTEventObject {
    token: string;
    arg1: IQSBT.ConstructorParamsStructOutput;
}
export type DeployedQSBTEvent = TypedEvent<[
    string,
    IQSBT.ConstructorParamsStructOutput
], DeployedQSBTEventObject>;
export type DeployedQSBTEventFilter = TypedEventFilter<DeployedQSBTEvent>;
export interface ITokenFactory extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: ITokenFactoryInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        deployQRC20(params_: IQRC20.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        deployQRC721(params_: IQRC721.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        deployQSBT(params_: IQSBT.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
    };
    deployQRC20(params_: IQRC20.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    deployQRC721(params_: IQRC721.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    deployQSBT(params_: IQSBT.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    callStatic: {
        deployQRC20(params_: IQRC20.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string>;
        deployQRC721(params_: IQRC721.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string>;
        deployQSBT(params_: IQSBT.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string>;
    };
    filters: {
        "DeployedQRC20(address,tuple)"(token?: null, arg1?: null): DeployedQRC20EventFilter;
        DeployedQRC20(token?: null, arg1?: null): DeployedQRC20EventFilter;
        "DeployedQRC721(address,tuple)"(token?: null, arg1?: null): DeployedQRC721EventFilter;
        DeployedQRC721(token?: null, arg1?: null): DeployedQRC721EventFilter;
        "DeployedQSBT(address,tuple)"(token?: null, arg1?: null): DeployedQSBTEventFilter;
        DeployedQSBT(token?: null, arg1?: null): DeployedQSBTEventFilter;
    };
    estimateGas: {
        deployQRC20(params_: IQRC20.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        deployQRC721(params_: IQRC721.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        deployQSBT(params_: IQSBT.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
    };
    populateTransaction: {
        deployQRC20(params_: IQRC20.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        deployQRC721(params_: IQRC721.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        deployQSBT(params_: IQSBT.ConstructorParamsStruct, tokenOwner_: PromiseOrValue<string>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
    };
}
