import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, Overrides, PopulatedTransaction, Signer, utils } from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from "./common";
export type ParameterStruct = {
    name: PromiseOrValue<string>;
    value: PromiseOrValue<BytesLike>;
    solidityType: PromiseOrValue<BigNumberish>;
};
export type ParameterStructOutput = [string, string, number] & {
    name: string;
    value: string;
    solidityType: number;
};
export interface ParameterCodecMockInterface extends utils.Interface {
    functions: {
        "add((string,bytes,uint8))": FunctionFragment;
        "decodeAddress((string,bytes,uint8))": FunctionFragment;
        "decodeBool((string,bytes,uint8))": FunctionFragment;
        "decodeBytes((string,bytes,uint8))": FunctionFragment;
        "decodeString((string,bytes,uint8))": FunctionFragment;
        "decodeUint256((string,bytes,uint8))": FunctionFragment;
        "encodeAddress(address,string)": FunctionFragment;
        "encodeBool(bool,string)": FunctionFragment;
        "encodeBytes(bytes,string)": FunctionFragment;
        "encodeString(string,string)": FunctionFragment;
        "encodeUint256(uint256,string)": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "add" | "decodeAddress" | "decodeBool" | "decodeBytes" | "decodeString" | "decodeUint256" | "encodeAddress" | "encodeBool" | "encodeBytes" | "encodeString" | "encodeUint256"): FunctionFragment;
    encodeFunctionData(functionFragment: "add", values: [ParameterStruct]): string;
    encodeFunctionData(functionFragment: "decodeAddress", values: [ParameterStruct]): string;
    encodeFunctionData(functionFragment: "decodeBool", values: [ParameterStruct]): string;
    encodeFunctionData(functionFragment: "decodeBytes", values: [ParameterStruct]): string;
    encodeFunctionData(functionFragment: "decodeString", values: [ParameterStruct]): string;
    encodeFunctionData(functionFragment: "decodeUint256", values: [ParameterStruct]): string;
    encodeFunctionData(functionFragment: "encodeAddress", values: [PromiseOrValue<string>, PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "encodeBool", values: [PromiseOrValue<boolean>, PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "encodeBytes", values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "encodeString", values: [PromiseOrValue<string>, PromiseOrValue<string>]): string;
    encodeFunctionData(functionFragment: "encodeUint256", values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]): string;
    decodeFunctionResult(functionFragment: "add", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "decodeAddress", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "decodeBool", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "decodeBytes", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "decodeString", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "decodeUint256", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "encodeAddress", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "encodeBool", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "encodeBytes", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "encodeString", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "encodeUint256", data: BytesLike): Result;
    events: {};
}
export interface ParameterCodecMock extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: ParameterCodecMockInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        add(value_: ParameterStruct, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        decodeAddress(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<[string]>;
        decodeBool(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<[boolean]>;
        decodeBytes(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<[string]>;
        decodeString(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<[string]>;
        decodeUint256(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<[BigNumber]>;
        encodeAddress(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[ParameterStructOutput]>;
        encodeBool(value_: PromiseOrValue<boolean>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[ParameterStructOutput]>;
        encodeBytes(value_: PromiseOrValue<BytesLike>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[ParameterStructOutput]>;
        encodeString(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[ParameterStructOutput]>;
        encodeUint256(value_: PromiseOrValue<BigNumberish>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[ParameterStructOutput]>;
    };
    add(value_: ParameterStruct, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    decodeAddress(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<string>;
    decodeBool(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<boolean>;
    decodeBytes(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<string>;
    decodeString(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<string>;
    decodeUint256(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<BigNumber>;
    encodeAddress(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
    encodeBool(value_: PromiseOrValue<boolean>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
    encodeBytes(value_: PromiseOrValue<BytesLike>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
    encodeString(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
    encodeUint256(value_: PromiseOrValue<BigNumberish>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
    callStatic: {
        add(value_: ParameterStruct, overrides?: CallOverrides): Promise<void>;
        decodeAddress(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<string>;
        decodeBool(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<boolean>;
        decodeBytes(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<string>;
        decodeString(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<string>;
        decodeUint256(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<BigNumber>;
        encodeAddress(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
        encodeBool(value_: PromiseOrValue<boolean>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
        encodeBytes(value_: PromiseOrValue<BytesLike>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
        encodeString(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
        encodeUint256(value_: PromiseOrValue<BigNumberish>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<ParameterStructOutput>;
    };
    filters: {};
    estimateGas: {
        add(value_: ParameterStruct, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        decodeAddress(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<BigNumber>;
        decodeBool(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<BigNumber>;
        decodeBytes(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<BigNumber>;
        decodeString(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<BigNumber>;
        decodeUint256(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<BigNumber>;
        encodeAddress(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;
        encodeBool(value_: PromiseOrValue<boolean>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;
        encodeBytes(value_: PromiseOrValue<BytesLike>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;
        encodeString(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;
        encodeUint256(value_: PromiseOrValue<BigNumberish>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;
    };
    populateTransaction: {
        add(value_: ParameterStruct, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        decodeAddress(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        decodeBool(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        decodeBytes(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        decodeString(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        decodeUint256(parameter_: ParameterStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        encodeAddress(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        encodeBool(value_: PromiseOrValue<boolean>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        encodeBytes(value_: PromiseOrValue<BytesLike>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        encodeString(value_: PromiseOrValue<string>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        encodeUint256(value_: PromiseOrValue<BigNumberish>, name_: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
    };
}
