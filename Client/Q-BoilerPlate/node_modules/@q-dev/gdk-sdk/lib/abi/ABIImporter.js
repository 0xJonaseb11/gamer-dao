"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEthersInterface = exports.getContractInterface = void 0;
const ethers_1 = require("ethers");
function getContractInterface(fileName) {
    // CAUTION: the explicit listing of each abi is required for browser support (otherwise webpack does not include the ABIs in the output bundle)
    switch (fileName) {
        case "RBAC.json":
            return require("./RBAC.json");
        case "RBACGroupable.json":
            return require("./RBACGroupable.json");
        case "RoleManagedRegistry.json":
            return require("./RoleManagedRegistry.json");
        case "MasterContractsRegistry.json":
            return require("./MasterContractsRegistry.json");
        case "MasterAccessManagement.json":
            return require("./MasterAccessManagement.json");
        case "MasterDAORegistry.json":
            return require("./MasterDAORegistry.json");
        case "MasterDAOFactory.json":
            return require("./MasterDAOFactory.json");
        case "DAORegistry.json":
            return require("./DAORegistry.json");
        case "DAOMemberStorage.json":
            return require("./DAOMemberStorage.json");
        case "DAOParameterStorage.json":
            return require("./DAOParameterStorage.json");
        case "DAOVault.json":
            return require("./DAOVault.json");
        case "PermissionManager.json":
            return require("./PermissionManager.json");
        case "TokenFactory.json":
            return require("./TokenFactory.json");
        case "TokenRegistry.json":
            return require("./TokenRegistry.json");
        case "VotingFactory.json":
            return require("./VotingFactory.json");
        case "VotingRegistry.json":
            return require("./VotingRegistry.json");
        case "QRC20.json":
            return require("./QRC20.json");
        case "QRC721.json":
            return require("./QRC721.json");
        case "QSBT.json":
            return require("./QSBT.json");
        case "GeneralDAOVoting.json":
            return require("./GeneralDAOVoting.json");
        case "ExpertsDAOVoting.json":
            return require("./ExpertsDAOVoting.json");
        default:
            throw new RangeError("Unknown abi file name: " + fileName);
    }
}
exports.getContractInterface = getContractInterface;
function getEthersInterface(fileName) {
    const abi = getContractInterface(fileName);
    return new ethers_1.ethers.utils.Interface(abi);
}
exports.getEthersInterface = getEthersInterface;
//# sourceMappingURL=ABIImporter.js.map