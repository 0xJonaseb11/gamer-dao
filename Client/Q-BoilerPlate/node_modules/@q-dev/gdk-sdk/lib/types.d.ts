import { CallOverrides } from "ethers";
/**
 * Helps specify gasBuffer in non-payable transactions.
 */
export interface TxOptions extends CallOverrides {
    /**
     * @field factor to be applied on the gas limit vs. the estimated gas use.
     * 1.3 would mean 30% above estimate.
     */
    gasBuffer?: string | number;
}
export interface CreateVotingParameters {
    remark: string;
    situation: string;
    callData: string;
}
export declare enum DefaultVotingSituations {
    General = "General Update Vote",
    ConfigurationParameter = "Configuration Parameter Vote",
    RegularParameter = "Regular Parameter Vote",
    Membership = "Membership Vote",
    Constitution = "Constitution Vote",
    PermissionManager = "Permission Manager Vote",
    DAORegistry = "DAO Registry Vote"
}
export declare enum EventNames {
    DeployedDAORegistry = "DeployedDAORegistry",
    DeployedDAOPanelVoting = "DeployedDAOPanelVoting",
    DeployedDAOParameterStorage = "DeployedDAOParameterStorage",
    DeployedDAOMemberStorage = "DeployedDAOMemberStorage"
}
export declare enum ParameterType {
    NONE = 0,
    ADDRESS = 1,
    UINT256 = 2,
    STRING = 3,
    BYTES = 4,
    BOOL = 5
}
export declare enum VotingType {
    NonRestricted = 0,
    Restricted = 1,
    PartiallyRestricted = 2
}
export interface DecodedData {
    functionName: string;
    arguments: any;
}
