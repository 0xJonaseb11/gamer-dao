import { TruffleContract } from "@nomiclabs/hardhat-truffle5/dist/src/types";
import { HardhatRuntimeEnvironment } from "hardhat/types";
declare type VerificationItem = {
  instance: TruffleContract;
  address: string;
  args: any;
};
export declare class Verifier {
  private hre;
  private attempts;
  private skipVerificationErrors;
  constructor(hre: HardhatRuntimeEnvironment | any, attempts: number, skipVerificationErrors: string[]);
  verifyBatch(verificationTable: Array<VerificationItem>): Promise<void>;
  verifySingle(contract: TruffleContract, ...args: any): Promise<void>;
  verifyProxy(proxyAddress: string, implAddress: string): Promise<void>;
  private attemptVerification;
  private verificationTask;
  /**
   * Calls the Etherscan API to link a proxy with its implementation ABI.
   *
   * Source: https://github.com/OpenZeppelin/openzeppelin-upgrades
   *
   * @param etherscanApi The Etherscan API config
   * @param proxyAddress The proxy address
   * @param implAddress The implementation address
   */
  private linkProxyWithImplementationAbi;
  private checkProxyVerificationStatus;
}
export {};
//# sourceMappingURL=verifier.d.ts.map
